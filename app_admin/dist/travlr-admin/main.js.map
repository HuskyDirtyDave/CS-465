{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/trip-data.service.ts","./src/app/trip-card/trip-card.component.ts","./src/app/trip-card/trip-card.component.html","./src/app/trip-listing/trip-listing.component.ts","./src/app/trip-listing/trip-listing.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Traveler Admin';\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <a href=\"#\"\n      class=\"navbar-brand\">{{title}}</a>\n  </div>\n</nav>\n<div class=\"container\">\n<app-trip-listing></app-trip-listing>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TripListingComponent } from './trip-listing/trip-listing.component';\nimport { TripCardComponent } from './trip-card/trip-card.component';\nimport { TripDataService } from './services/trip-data.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TripListingComponent,\n    TripCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [\n    TripDataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Trip } from '../models/trip';\n\n@Injectable()\nexport class TripDataService {\n\n  constructor(private http: HttpClient) { }\n\n  private apiBaseURL = 'http://localhost:3000/api/';\n\n  public getTrips(): Promise<Trip[]>{\n    console.log('Inside TripDataService#getTrips');\n\n    return this.http\n      .get(`${this.apiBaseURL}trips`)\n      .toPromise()\n      .then(response => response as Trip[])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any>{\n    console.log('Something has gone wrong', error);\n    return Promise.reject(error.message || error);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-trip-card',\n  templateUrl: './trip-card.component.html',\n  styleUrls: ['./trip-card.component.css']\n})\nexport class TripCardComponent implements OnInit {\n\n\n  @Input('trip') trip:any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card ml-4\"\n  style=\"width:18rem;\">\n  <div class=\"card-header\">{{trip.name}}</div>\n  <img src=\"assets/images/{{trip.image}}\"\n    alt=\"{{trip.name}}\"\n    class=\"card-img-top\" />\n  <div class=\"card-body\">\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{trip.resort}}</h6>\n    <p class=\"cardsubtile mt-3 mb-3 textmuted\">{{trip.length}} only {{trip.perPerson | currency: 'USD': true}} per person</p>\n    <p class=\"card-text\"\n      [innerHTML]=\"trip.description\"></p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n//import { trips } from '../data/trips';\nimport { TripDataService } from '../services/trip-data.service';\nimport { Trip } from '../models/trip';\n\n@Component({\n  selector: 'app-trip-listing',\n  templateUrl: './trip-listing.component.html',\n  styleUrls: ['./trip-listing.component.css']\n})\nexport class TripListingComponent implements OnInit {\n\n  //trips: Array<any> = trips;\n\n  trips!: Trip[];\n  message!: string;\n\n\n  constructor(private tripDataService: TripDataService) { }\n\n  private getTrips(): void{\n    console.log('Inside TripListingComponent#getTrips');\n    this.message = 'Searching for trips';\n    this.tripDataService\n    .getTrips()\n    .then(foundTrips => {\n      this.message = foundTrips.length > 0 ? '' : 'No trips found';\n      this.trips = foundTrips;\n    })\n  }\n\n  ngOnInit(): void {\n    this.getTrips();\n  }\n\n}\n","<div class=\"row\">\n  <div *ngFor=\"let trip of trips\">\n    <app-trip-card [trip]=\"trip\" class=\"card-deck mt-2\"></app-trip-card>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}